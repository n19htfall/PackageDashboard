# generated by datamodel-codegen:
#   filename:  osv.schema.json
#   timestamp: 2023-04-22T08:06:26+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, Dict, List, Optional, Union

from pydantic import AnyUrl, BaseModel, Field


class Type(Enum):
    CVSS_V2 = 'CVSS_V2'
    CVSS_V3 = 'CVSS_V3'


class SeverityItem(BaseModel):
    type: Type
    score: str


class Package(BaseModel):
    ecosystem: str
    name: str
    purl: Optional[str] = None


class SeverityItem1(BaseModel):
    type: Type
    score: str


class Type2(Enum):
    GIT = 'GIT'
    SEMVER = 'SEMVER'
    ECOSYSTEM = 'ECOSYSTEM'


class Event(BaseModel):
    introduced: str


class Event1(BaseModel):
    fixed: str


class Event2(BaseModel):
    last_affected: str


class Event3(BaseModel):
    limit: str


class Range(BaseModel):
    type: Type2
    repo: Optional[str] = None
    events: List[Union[Event, Event1, Event2, Event3]] = Field(..., min_items=1)
    database_specific: Optional[Dict[str, Any]] = None


class AffectedItem(BaseModel):
    package: Optional[Package] = None
    severity: Optional[List[SeverityItem1]] = None
    ranges: Optional[List[Range]] = None
    versions: Optional[List[str]] = None
    ecosystem_specific: Optional[Dict[str, Any]] = None
    database_specific: Optional[Dict[str, Any]] = None


class Type3(Enum):
    ADVISORY = 'ADVISORY'
    ARTICLE = 'ARTICLE'
    DETECTION = 'DETECTION'
    DISCUSSION = 'DISCUSSION'
    REPORT = 'REPORT'
    FIX = 'FIX'
    INTRODUCED = 'INTRODUCED'
    GIT = 'GIT'
    PACKAGE = 'PACKAGE'
    EVIDENCE = 'EVIDENCE'
    WEB = 'WEB'


class Reference(BaseModel):
    type: Type3
    url: AnyUrl


class Type4(Enum):
    FINDER = 'FINDER'
    REPORTER = 'REPORTER'
    ANALYST = 'ANALYST'
    COORDINATOR = 'COORDINATOR'
    REMEDIATION_DEVELOPER = 'REMEDIATION_DEVELOPER'
    REMEDIATION_REVIEWER = 'REMEDIATION_REVIEWER'
    REMEDIATION_VERIFIER = 'REMEDIATION_VERIFIER'
    TOOL = 'TOOL'
    SPONSOR = 'SPONSOR'
    OTHER = 'OTHER'


class Credit(BaseModel):
    name: str
    contact: Optional[List[str]] = None
    type: Optional[Type4] = None


class OpenSourceVulnerability(BaseModel):
    schema_version: Optional[str] = None
    id: str
    modified: datetime
    published: Optional[datetime] = None
    withdrawn: Optional[datetime] = None
    aliases: Optional[List[str]] = None
    related: Optional[List[str]] = None
    summary: Optional[str] = None
    details: Optional[str] = None
    severity: Optional[List[SeverityItem]] = None
    affected: Optional[List[AffectedItem]] = None
    references: Optional[List[Reference]] = None
    credits: Optional[List[Credit]] = None
    database_specific: Optional[Dict[str, Any]] = None
